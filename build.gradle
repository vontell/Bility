// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.2"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// TASKS FOR BUILDING THE BILITY FRONTEND
import org.apache.tools.ant.taskdefs.condition.Os

task installUI(type: Exec) {
    String npm = 'npm';
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        npm = 'npm.cmd'
    }
    workingDir 'bility-frontend'
    commandLine npm, 'install'
}

task runUI(type: Exec, dependsOn: ['installUI']) {
    String npm = 'npm';
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        npm = 'npm.cmd'
    }
    workingDir 'bility-frontend'
    commandLine npm, 'run', 'dev'
}

task packageFrontend(type: Exec) {
    workingDir 'bility-frontend'

}

task installScreenCapture() {

}

task runScreenCapture(type: Exec, dependsOn: ['installScreenCapture']) {
    workingDir 'scripts'
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        print("Minicap screen casting not implemented for Windows")
    } else {
        commandLine 'sh', 'start-minicap.sh'
    }
}

task runBility(dependsOn: ['bility-server:run', 'runUI', 'runScreenCapture']) {

}